// See https://github.com/dialogflow/dialogflow-fulfillment-nodejs
// for Dialogflow fulfillment library docs, samples, and to report issues
'use strict';




const functions = require('firebase-functions');
const {WebhookClient} = require('dialogflow-fulfillment');
const {Card, Suggestion} = require('dialogflow-fulfillment');
const axios = require('axios');

process.env.DEBUG = 'dialogflow:debug'; // enables lib debugging statements
 
exports.dialogflowFirebaseFulfillment = functions.https.onRequest((request, response) => {
  const agent = new WebhookClient({ request, response });
  //console.log('Dialogflow Request headers: ' + JSON.stringify(request.headers));
 // console.log('Dialogflow Request body: ' + JSON.stringify(request.body));
 
  function welcome(agent) {
    agent.add(`Welcome to my agent123!`);
    console.log(agent);
  }
 
  function fallback(agent) {
    agent.add(`I didn't understand`);
    agent.add(`I'm sorry, can you try again?`);
  }
  
  function apiHandler(agent){
   //const word = agent.parameters.word;
    const word = 'teacher';
    //agent.add(`Here are the rhyming words for ${word}`)
   return axios.get(`https://chatbot.traversia.net/index.php`)
      .then((result) => {
     			var jsodata = JSON.parse(result);
        console.log(jsodata.name);
     	agent.add(jsodata.name);
        //result.data.map(wordObj => {
          //console.log(wordObj);
          //agent.add(JSON.stringify(wordObj.word));
          //agent.add(wordObj.name);
          //console.log(wordObj.name);
          // agent.end(`${wordObj.word}`);
       // });
      });
  }
  
  // Send email last
  function nothanks(agent){
    let params = agent.getContext("para").parameters;
	let respiracion = params.email;
    let phonenumber = params.phonenumber;
    let type = params.type;
    //agent.add(`send msg ${respiracion}`);    
    return axios.get(`https://chatbot.traversia.net/simple.php?email=${respiracion}&mobile=${phonenumber}&type=${type}`)
      .then((result) => {
     	        
      });   	
    
  }
  
   // check mobile number and validation 
  function flight2(agent){
    let params = agent.getContext("para").parameters;
	let respiracion = params.email;
    let phonenumber = params.phonenumber;
    let type = params.type;
    let type2 = params.type2;        
    return axios.get(`https://chatbot.traversia.net/simple.php?email=${respiracion}&mobile=${phonenumber}&type=${type}`)
      .then((result) => {     	        
      });       
  }
   function hotel2(agent){
    let params = agent.getContext("para").parameters;
	let respiracion = params.email;
    let phonenumber = params.phonenumber;
    let type = params.type;
    let type2 = params.type2;        
    return axios.get(`https://chatbot.traversia.net/simple.php?email=${respiracion}&mobile=${phonenumber}&type=${type}`)
      .then((result) => {     	        
      });       
  }
  
  function flightHandle(agent){
  	const phonenumber = agent.parameters.phonenumber;
    const email = agent.parameters.email;    
    	nothanks(phonenumber,email); 
  }
  // // Uncomment and edit to make your own intent handler
  // // uncomment `intentMap.set('your intent name here', yourFunctionHandler);`
  // // below to get this function to be run when a Dialogflow intent is matched
  // function yourFunctionHandler(agent) {
  //   agent.add(`This message is from Dialogflow's Cloud Functions for Firebase editor!`);
  //   agent.add(new Card({
  //       title: `Title: this is a card title`,
  //       imageUrl: 'https://developers.google.com/actions/images/badges/XPM_BADGING_GoogleAssistant_VER.png',
  //       text: `This is the body text of a card.  You can even use line\n  breaks and emoji! üíÅ`,
  //       buttonText: 'This is a button',
  //       buttonUrl: 'https://assistant.google.com/'
  //     })
  //   );
  //   agent.add(new Suggestion(`Quick Reply`));
  //   agent.add(new Suggestion(`Suggestion`));
  //   agent.setContext({ name: 'weather', lifespan: 2, parameters: { city: 'Rome' }});
  // }

  // // Uncomment and edit to make your own Google Assistant intent handler
  // // uncomment `intentMap.set('your intent name here', googleAssistantHandler);`
  // // below to get this function to be run when a Dialogflow intent is matched
  // function googleAssistantHandler(agent) {
  //   let conv = agent.conv(); // Get Actions on Google library conv instance
  //   conv.ask('Hello from the Actions on Google client library!') // Use Actions on Google library
  //   agent.add(conv); // Add Actions on Google library responses to your agent's response
  // }
  // // See https://github.com/dialogflow/fulfillment-actions-library-nodejs
  // // for a complete Dialogflow fulfillment library Actions on Google client library v2 integration sample

  // Run the proper function handler based on the matched Dialogflow intent name
  let intentMap = new Map();
  intentMap.set('Default Welcome Intent', welcome);
  intentMap.set('Default Fallback Intent', fallback); 
  intentMap.set('Api', apiHandler);
  intentMap.set('event_nothanks', nothanks);
  intentMap.set('flight2', flight2);
  intentMap.set('hotel2', hotel2);
  //intentMap.set('4-step-event-for-all', flightHandle);
  
  
  // intentMap.set('your intent name here', googleAssistantHandler);
  agent.handleRequest(intentMap);
  //My editing  
  
});
